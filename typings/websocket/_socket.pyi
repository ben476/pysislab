"""
This type stub file was generated by pyright.
"""

import socket
from typing import Union
from ._exceptions import *
from ._ssl_compat import *
from ._utils import *

DEFAULT_SOCKET_OPTION = ...
if hasattr(socket, "SO_KEEPALIVE"):
    ...
if hasattr(socket, "TCP_KEEPIDLE"):
    ...
if hasattr(socket, "TCP_KEEPINTVL"):
    ...
if hasattr(socket, "TCP_KEEPCNT"):
    ...
_default_timeout = ...
__all__ = ["DEFAULT_SOCKET_OPTION", "sock_opt", "setdefaulttimeout", "getdefaulttimeout", "recv", "recv_line", "send"]
class sock_opt:
    def __init__(self, sockopt: list, sslopt: dict) -> None:
        ...
    


def setdefaulttimeout(timeout: Union[int, float, None]) -> None:
    """
    Set the global timeout setting to connect.

    Parameters
    ----------
    timeout: int or float
        default socket timeout time (in seconds)
    """
    ...

def getdefaulttimeout() -> Union[int, float, None]:
    """
    Get default timeout

    Returns
    ----------
    _default_timeout: int or float
        Return the global timeout setting (in seconds) to connect.
    """
    ...

def recv(sock: socket.socket, bufsize: int) -> bytes:
    ...

def recv_line(sock: socket.socket) -> bytes:
    ...

def send(sock: socket.socket, data: Union[bytes, str]) -> int:
    ...

